type User {
  id: ID!
  name: String!
  color: String!
  lastActive: DateTime!
}

input CreateUserInput {
  id: ID!
  name: String!
  color: String!
  lastActive: DateTime!
}

input LoginInput {
  id: ID!
  name: String!
  color: String!
  lastActive: DateTime!
}

type LoginResponse {
  user: User!
  token: String!
}

extend type Query {
  users: [User!]
  user(id: ID!): User
}

extend type Mutation {
  createUser(input: CreateUserInput!): User!
    @deprecated(reason: "Use login instead")
  login(input: LoginInput!): LoginResponse!
}
